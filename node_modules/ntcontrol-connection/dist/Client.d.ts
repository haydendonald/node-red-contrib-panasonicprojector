/// <reference types="node" />
import { EventEmitter } from 'events';
import { CommandType } from './Types';
/**
 * NT CONTROL connection client.
 */
export declare class Client extends EventEmitter {
    private host;
    private port;
    private user;
    private password;
    private cmdStack;
    private socket;
    private token;
    private receivebuffer;
    private reportConnectionError;
    /**
     * Connected state (including initial handshake)
     */
    connected: boolean;
    /**
     * Enumeration of events emitted by the class.
     */
    static Events: {
        CONNECT: string;
        DISCONNECT: string;
        DATA: string;
        END: string;
        DEBUG: string;
        AUTHENTICATION_ERROR: string;
    };
    /**
     * Creates a new NT CONTROL client.
     * @param host      NT CONTROL host/ip address
     * @param port      Port of the NT CONTROL host (default: 1024)
     * @param user      The user (default: 'admin1')
     * @param password  The password (default: 'panasonic')
     */
    constructor(host: string, port?: number, user?: string, password?: string);
    connect(): void;
    /**
     * Set authentication information for the connection
     * @param user      The username (default: 'admin1')
     * @param password  The password (default: 'panasonic')
     */
    setAuthentication(user: string | undefined, password: string | undefined): void;
    private setToken;
    private onData;
    private onReceiveLine;
    /**
     * Sends a command to the NT CONTROL host.
     * @param cmd   The command string (without CR at the end)
     * @param type  The command type (binary vs. ascii)
     * @returns     A promise with the response (string) from the host.
     */
    sendCommand(cmd: string, type?: CommandType): Promise<string | undefined>;
    /**
     * Closes the underlying TCP connection.
     */
    destroy(): void;
    private autoResolve;
}
