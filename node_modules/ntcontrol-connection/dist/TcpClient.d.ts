/// <reference types="node" />
import { EventEmitter } from 'events';
export declare enum ClientStatus {
    Unkown = -1,
    Ok = 0,
    Warning = 1,
    Error = 2
}
export interface ClientOptions {
    reconnect_interval?: number;
    reconnect?: boolean;
}
export declare class TcpClient extends EventEmitter {
    connected: boolean;
    private host;
    private port;
    private status;
    private options;
    private trying;
    private tryTimer;
    private failedAttempts;
    private socket;
    constructor(host: string, port: number, options?: ClientOptions | undefined);
    connect(): void;
    write(message: string | undefined, cb?: any): boolean;
    send(message: string | undefined, cb?: (err?: Error | undefined) => void): boolean;
    destroy(): void;
    private new_status;
    private restartReconnect;
    private tcp_reconnect;
}
